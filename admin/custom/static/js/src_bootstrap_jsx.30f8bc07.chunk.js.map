{"version":3,"file":"static/js/src_bootstrap_jsx.30f8bc07.chunk.js","mappings":"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","sources":["AcmeComponent.jsx","App.jsx","theme.js","bootstrap.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@mui/styles';\n\nimport { LinearProgress, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\n// important to make from package and not from some children.\n// invalid\n// import ConfigGeneric from '@iobroker/adapter-react-v5/ConfigGeneric';\n// valid\nimport { ConfigGeneric, i18n as I18n } from '@iobroker/adapter-react-v5';\n\nconst styles = () => ({\n    table: {\n        minWidth: 400,\n    },\n    header: {\n        fontSize: 16,\n        fontWeight: 'bold',\n    },\n    ok: {\n        color: '#0ba20b'\n    },\n    warn: {\n        color: '#f57d1d'\n    },\n    error: {\n        color: '#c42c3a'\n    },\n});\n\nclass AcmeComponent extends ConfigGeneric {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collections: null,\n        };\n    }\n\n    async componentDidMount() {\n        super.componentDidMount();\n        await this.readData();\n        await this.props.socket.subscribeObject('system.certificates', this.onCertsChanged);\n    }\n\n    async readData(obj) {\n        let collections = obj || (await this.props.socket.getObject('system.certificates'));\n        if (collections?.native?.collections) {\n            collections = collections.native.collections;\n        } else {\n            collections = {};\n        }\n\n        this.setState({ collections });\n    }\n\n    async componentWillUnmount() {\n        await this.props.socket.unsubscribeObject('system.certificates', this.onCertsChanged);\n    }\n\n    onCertsChanged = (id, obj) => {\n        if (id === 'system.certificates' && obj) {\n            this.readData(obj)\n                .catch(() => {});\n        }\n    };\n\n    renderItem() {\n        if (!this.state.collections) {\n            return <LinearProgress />;\n        } else {\n            return <div style={{ width: '100%'}}>\n                <h4>{I18n.t('custom_acme_title')}</h4>\n                <TableContainer component={Paper} style={{ width: '100%' }}>\n                    <Table style={{ width: '100%' }} size=\"small\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>{I18n.t('custom_acme_id')}</TableCell>\n                                <TableCell>{I18n.t('custom_acme_status')}</TableCell>\n                                <TableCell>{I18n.t('custom_acme_domains')}</TableCell>\n                                <TableCell>{I18n.t('custom_acme_staging')}</TableCell>\n                                <TableCell>{I18n.t('custom_acme_expires')}</TableCell>\n                                <TableCell></TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {Object.keys(this.state.collections).map(id => {\n                                const collection = this.state.collections[id];\n                                let status;\n                                if (new Date(collection.tsExpires).getTime() > Date.now() && !collection.staging) {\n                                    status = <span className={this.props.classes.ok}>OK</span>;\n                                } else if (new Date(collection.tsExpires).getTime() <= Date.now()) {\n                                    status = <span className={this.props.classes.error}>{I18n.t('custom_acme_expired')}</span>;\n                                } else if (collection.staging) {\n                                    status = <span className={this.props.classes.warn}>{I18n.t('custom_acme_staging')}</span>;\n                                }\n\n                                return <TableRow\n                                    key={id}\n                                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                >\n                                    <TableCell component=\"th\" scope=\"row\">{id}</TableCell>\n                                    <TableCell>{status}</TableCell>\n                                    <TableCell>{collection.domains.join(', ')}</TableCell>\n                                    <TableCell className={collection.staging ? this.props.classes.warn : ''}>{collection.staging ? 'âœ“' : ''}</TableCell>\n                                    <TableCell className={new Date(collection.tsExpires).getTime() < Date.now() ? this.props.classes.error : ''}>{new Date(collection.tsExpires).toLocaleString()}</TableCell>\n                                </TableRow>;\n                            })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>;\n        }\n    }\n}\n\nAcmeComponent.propTypes = {\n    socket: PropTypes.object.isRequired,\n    themeType: PropTypes.string,\n    themeName: PropTypes.string,\n    style: PropTypes.object,\n    className: PropTypes.string,\n    data: PropTypes.object.isRequired,\n    attr: PropTypes.string,\n    schema: PropTypes.object,\n    onError: PropTypes.func,\n    onChange: PropTypes.func,\n};\n\nexport default withStyles(styles)(AcmeComponent);","// this file used only for simulation and not used in end build\n\nimport React from 'react';\nimport { ThemeProvider, StyledEngineProvider } from '@mui/material/styles';\n\nimport withStyles from '@mui/styles/withStyles';\n\nimport GenericApp from '@iobroker/adapter-react-v5/GenericApp';\nimport { I18n, Loader } from '@iobroker/adapter-react-v5';\n\nimport AcmeComponent from './AcmeComponent';\n\nconst styles = theme => ({\n    app: {\n        backgroundColor: theme.palette.background.default,\n        color: theme.palette.text.primary,\n        height: '100%',\n    },\n    item: {\n        padding: 50,\n        width: '100%',\n    }\n});\n\nclass App extends GenericApp {\n    constructor(props) {\n        const extendedProps = { ...props };\n        super(props, extendedProps);\n\n        this.state = {\n            data: { myCustomAttribute: 'red' },\n            theme: this.createTheme(),\n        };\n        const translations = {\n            en: require('./i18n/en'),\n            de: require('./i18n/de'),\n            ru: require('./i18n/ru'),\n            pt: require('./i18n/pt'),\n            nl: require('./i18n/nl'),\n            fr: require('./i18n/fr'),\n            it: require('./i18n/it'),\n            es: require('./i18n/es'),\n            pl: require('./i18n/pl'),\n            uk: require('./i18n/uk'),\n            'zh-cn': require('./i18n/zh-cn'),\n        };\n\n        I18n.setTranslations(translations);\n        I18n.setLanguage((navigator.language || navigator.userLanguage || 'en').substring(0, 2).toLowerCase());\n    }\n\n    render() {\n        if (!this.state.loaded) {\n            return <StyledEngineProvider injectFirst>\n                <ThemeProvider theme={this.state.theme}>\n                    <Loader theme={this.state.themeType} />\n                </ThemeProvider>\n            </StyledEngineProvider>;\n        }\n\n        return <StyledEngineProvider injectFirst>\n            <ThemeProvider theme={this.state.theme}>\n                <div className={this.props.classes.app}>\n                    <div className={this.props.classes.item}>\n                        <AcmeComponent\n                            socket={this.socket}\n                            themeType={this.state.themeType}\n                            themeName={this.state.themeName}\n                            attr='myCustomAttribute'\n                            data={this.state.data}\n                            onError={() => {}}\n                            instance={0}\n                            schema={{\n                                name: 'ConfigCustomAcmeSet/Components/AcmeComponent',\n                                type: 'custom',\n                            }}\n                            onChange={data => {\n                                this.setState({ data });\n                            }}\n                        />\n                    </div>\n                </div>\n            </ThemeProvider>\n        </StyledEngineProvider>;\n    }\n}\n\nexport default withStyles(styles)(App);","// this file used only for simulation and not used in end build\nimport Theme from '@iobroker/adapter-react-v5/Theme';\n\nexport default type => {\n    const danger = '#dd5325';\n    const success = '#73b6a8';\n    const theme = { ...Theme(type) };\n    if (!theme) {\n        return theme;\n    }\n    theme.palette.text.danger = {\n        color: danger,\n    };\n    theme.palette.text.success = {\n        color: success,\n    };\n\n    return theme;\n};","// this file used only for simulation and not used in end build\n\n/* eslint-disable */\nimport React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { ThemeProvider, StyledEngineProvider } from '@mui/material/styles';\nimport Utils from '@iobroker/adapter-react-v5/Components/Utils';\nimport App from './App';\nimport theme from './theme';\n\nwindow.adapterName = 'adapter-component-template';\nlet themeName = Utils.getThemeName();\n\nfunction build() {\n    const container = document.getElementById('root');\n    const root = createRoot(container);\n    return root.render(<React.StrictMode>\n        <StyledEngineProvider injectFirst>\n            <ThemeProvider theme={theme(themeName)}>\n                <App\n                    socket={{port: 8081}}\n                    onThemeChange={(_theme) => {\n                        themeName = _theme;\n                        build();\n                    }}\n                />\n            </ThemeProvider>\n        </StyledEngineProvider>\n    </React.StrictMode>);\n}\n\nbuild();"],"names":["styles","AcmeComponent","props","id","obj","collections","collection","status","theme","App","GenericApp","extendedProps","translations","StyledEngineProvider","ThemeProvider","data","withStyles","type","danger","success","Theme","themeName","Utils","build","container","_theme"],"sourceRoot":""}
{"version":3,"file":"static/js/src_Components_jsx.3ae67d0a.chunk.js","mappings":"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","sources":["AcmeComponent.jsx","Components.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n    LinearProgress, Table, TableBody,\r\n    TableCell, TableContainer,\r\n    TableHead, TableRow, Paper,\r\n} from '@mui/material';\r\n// important to make from package and not from some children.\r\n// invalid\r\n// import ConfigGeneric from '@iobroker/adapter-react-v5/ConfigGeneric';\r\n// valid\r\nimport { ConfigGeneric, I18n } from '@iobroker/adapter-react-v5';\r\n\r\nconst styles = {\r\n    table: {\r\n        minWidth: 400,\r\n    },\r\n    header: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n    },\r\n    ok: {\r\n        color: '#0ba20b'\r\n    },\r\n    warn: {\r\n        color: '#f57d1d'\r\n    },\r\n    error: {\r\n        color: '#c42c3a'\r\n    },\r\n};\r\n\r\nclass AcmeComponent extends ConfigGeneric {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            collections: null,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        super.componentDidMount();\r\n        await this.readData();\r\n        await this.props.socket.subscribeObject('system.certificates', this.onCertsChanged);\r\n    }\r\n\r\n    async readData(obj) {\r\n        let collections = obj || (await this.props.socket.getObject('system.certificates'));\r\n        if (collections?.native?.collections) {\r\n            collections = collections.native.collections;\r\n        } else {\r\n            collections = {};\r\n        }\r\n\r\n        this.setState({ collections });\r\n    }\r\n\r\n    async componentWillUnmount() {\r\n        await this.props.socket.unsubscribeObject('system.certificates', this.onCertsChanged);\r\n    }\r\n\r\n    onCertsChanged = (id, obj) => {\r\n        if (id === 'system.certificates' && obj) {\r\n            this.readData(obj)\r\n                .catch(() => {});\r\n        }\r\n    };\r\n\r\n    renderItem() {\r\n        if (!this.state.collections) {\r\n            return <LinearProgress />;\r\n        } else {\r\n            return <div style={{ width: '100%'}}>\r\n                <h4>{I18n.t('custom_acme_title')}</h4>\r\n                <TableContainer component={Paper} style={{ width: '100%' }}>\r\n                    <Table style={{ width: '100%' }} size=\"small\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>{I18n.t('custom_acme_id')}</TableCell>\r\n                                <TableCell>{I18n.t('custom_acme_status')}</TableCell>\r\n                                <TableCell>{I18n.t('custom_acme_domains')}</TableCell>\r\n                                <TableCell>{I18n.t('custom_acme_staging')}</TableCell>\r\n                                <TableCell>{I18n.t('custom_acme_expires')}</TableCell>\r\n                                <TableCell></TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {Object.keys(this.state.collections).map(id => {\r\n                                const collection = this.state.collections[id];\r\n                                let status;\r\n                                if (new Date(collection.tsExpires).getTime() > Date.now() && !collection.staging) {\r\n                                    status = <span style={styles.ok}>OK</span>;\r\n                                } else if (new Date(collection.tsExpires).getTime() <= Date.now()) {\r\n                                    status = <span style={styles.error}>{I18n.t('custom_acme_expired')}</span>;\r\n                                } else if (collection.staging) {\r\n                                    status = <span style={styles.warn}>{I18n.t('custom_acme_staging')}</span>;\r\n                                }\r\n\r\n                                return <TableRow\r\n                                    key={id}\r\n                                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                                >\r\n                                    <TableCell component=\"th\" scope=\"row\">{id}</TableCell>\r\n                                    <TableCell>{status}</TableCell>\r\n                                    <TableCell>{collection.domains.join(', ')}</TableCell>\r\n                                    <TableCell style={collection.staging ? styles.warn : undefined}>{collection.staging ? 'âœ“' : ''}</TableCell>\r\n                                    <TableCell style={new Date(collection.tsExpires).getTime() < Date.now() ? styles.error : undefined}>{new Date(collection.tsExpires).toLocaleString()}</TableCell>\r\n                                </TableRow>;\r\n                            })}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </div>;\r\n        }\r\n    }\r\n}\r\n\r\nAcmeComponent.propTypes = {\r\n    socket: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n    themeName: PropTypes.string,\r\n    style: PropTypes.object,\r\n    data: PropTypes.object.isRequired,\r\n    attr: PropTypes.string,\r\n    schema: PropTypes.object,\r\n    onError: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nexport default AcmeComponent;\r\n","import AcmeComponent from './AcmeComponent';\r\n\r\nexport default { AcmeComponent };"],"names":["styles","AcmeComponent","props","id","obj","collections","collection","status"],"sourceRoot":""}
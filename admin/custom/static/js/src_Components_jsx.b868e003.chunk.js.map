{"version":3,"file":"static/js/src_Components_jsx.b868e003.chunk.js","mappings":"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","sources":["AcmeComponent.jsx","Components.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@mui/styles';\n\nimport { LinearProgress, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper } from '@mui/material';\n// important to make from package and not from some children.\n// invalid\n// import ConfigGeneric from '@iobroker/adapter-react-v5/ConfigGeneric';\n// valid\nimport { ConfigGeneric, i18n as I18n } from '@iobroker/adapter-react-v5';\n\nconst styles = () => ({\n    table: {\n        minWidth: 400,\n    },\n    header: {\n        fontSize: 16,\n        fontWeight: 'bold',\n    },\n    ok: {\n        color: '#0ba20b'\n    },\n    warn: {\n        color: '#f57d1d'\n    },\n    error: {\n        color: '#c42c3a'\n    },\n});\n\nclass AcmeComponent extends ConfigGeneric {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collections: null,\n        };\n    }\n\n    async componentDidMount() {\n        super.componentDidMount();\n        await this.readData();\n        await this.props.socket.subscribeObject('system.certificates', this.onCertsChanged);\n    }\n\n    async readData(obj) {\n        let collections = obj || (await this.props.socket.getObject('system.certificates'));\n        if (collections?.native?.collections) {\n            collections = collections.native.collections;\n        } else {\n            collections = {};\n        }\n\n        this.setState({ collections });\n    }\n\n    async componentWillUnmount() {\n        await this.props.socket.unsubscribeObject('system.certificates', this.onCertsChanged);\n    }\n\n    onCertsChanged = (id, obj) => {\n        if (id === 'system.certificates' && obj) {\n            this.readData(obj)\n                .catch(() => {});\n        }\n    };\n\n    renderItem() {\n        if (!this.state.collections) {\n            return <LinearProgress />;\n        } else {\n            return <div style={{ width: '100%'}}>\n                <h4>{I18n.t('custom_acme_title')}</h4>\n                <TableContainer component={Paper} style={{ width: '100%' }}>\n                    <Table style={{ width: '100%' }} size=\"small\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>{I18n.t('custom_acme_id')}</TableCell>\n                                <TableCell>{I18n.t('custom_acme_status')}</TableCell>\n                                <TableCell>{I18n.t('custom_acme_domains')}</TableCell>\n                                <TableCell>{I18n.t('custom_acme_staging')}</TableCell>\n                                <TableCell>{I18n.t('custom_acme_expires')}</TableCell>\n                                <TableCell></TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {Object.keys(this.state.collections).map(id => {\n                                const collection = this.state.collections[id];\n                                let status;\n                                if (new Date(collection.tsExpires).getTime() > Date.now() && !collection.staging) {\n                                    status = <span className={this.props.classes.ok}>OK</span>;\n                                } else if (new Date(collection.tsExpires).getTime() <= Date.now()) {\n                                    status = <span className={this.props.classes.error}>{I18n.t('custom_acme_expired')}</span>;\n                                } else if (collection.staging) {\n                                    status = <span className={this.props.classes.warn}>{I18n.t('custom_acme_staging')}</span>;\n                                }\n\n                                return <TableRow\n                                    key={id}\n                                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                                >\n                                    <TableCell component=\"th\" scope=\"row\">{id}</TableCell>\n                                    <TableCell>{status}</TableCell>\n                                    <TableCell>{collection.domains.join(', ')}</TableCell>\n                                    <TableCell className={collection.staging ? this.props.classes.warn : ''}>{collection.staging ? 'âœ“' : ''}</TableCell>\n                                    <TableCell className={new Date(collection.tsExpires).getTime() < Date.now() ? this.props.classes.error : ''}>{new Date(collection.tsExpires).toLocaleString()}</TableCell>\n                                </TableRow>;\n                            })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </div>;\n        }\n    }\n}\n\nAcmeComponent.propTypes = {\n    socket: PropTypes.object.isRequired,\n    themeType: PropTypes.string,\n    themeName: PropTypes.string,\n    style: PropTypes.object,\n    className: PropTypes.string,\n    data: PropTypes.object.isRequired,\n    attr: PropTypes.string,\n    schema: PropTypes.object,\n    onError: PropTypes.func,\n    onChange: PropTypes.func,\n};\n\nexport default withStyles(styles)(AcmeComponent);","import AcmeComponent from './AcmeComponent';\n\nexport default { AcmeComponent };"],"names":["styles","AcmeComponent","props","id","obj","collections","collection","status"],"sourceRoot":""}